/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "heartbeat_service_types.h"

#include <algorithm>
#include <ostream>

#include <thrift/TToString.h>

namespace mmux { namespace directory {


heartbeat::~heartbeat() throw() {
}


void heartbeat::__set_timestamp(const int64_t val) {
  this->timestamp = val;
}

void heartbeat::__set_sender(const std::string& val) {
  this->sender = val;
}
std::ostream& operator<<(std::ostream& out, const heartbeat& obj)
{
  obj.printTo(out);
  return out;
}


void swap(heartbeat &a, heartbeat &b) {
  using ::std::swap;
  swap(a.timestamp, b.timestamp);
  swap(a.sender, b.sender);
  swap(a.__isset, b.__isset);
}

heartbeat::heartbeat(const heartbeat& other0) {
  timestamp = other0.timestamp;
  sender = other0.sender;
  __isset = other0.__isset;
}
heartbeat& heartbeat::operator=(const heartbeat& other1) {
  timestamp = other1.timestamp;
  sender = other1.sender;
  __isset = other1.__isset;
  return *this;
}
void heartbeat::printTo(std::ostream& out) const {
  using ::apache::thrift::to_string;
  out << "heartbeat(";
  out << "timestamp=" << to_string(timestamp);
  out << ", " << "sender=" << to_string(sender);
  out << ")";
}

}} // namespace
