include(CMakeDependentOption)

# Components to build
option(BUILD_TESTS "Build with unittests" ON)
CMAKE_DEPENDENT_OPTION(USE_SYSTEM_CATCH "Use system catch library" OFF "BUILD_TESTS" OFF)
option(USE_SYSTEM_BOOST "Use system boost libraries" OFF)
option(USE_SYSTEM_THRIFT "Use system thrift library" OFF)
option(USE_SYSTEM_LIBCUCKOO "Use system libcuckoo library" OFF)
option(USE_SYSTEM_AWS_SDK "Use system AWS SDK" OFF)
option(USE_SYSTEM_JEMALLOC "Use system Jemalloc" OFF)
option(BUILD_BENCHMARKS "Build benchmarks" OFF)
option(GENERATE_THRIFT "Generate thrift files" OFF)
option(BUILD_CLIENTS "Build client libraries" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_C_CLIENT "Build C client library" OFF "BUILD_CLIENTS" OFF)
CMAKE_DEPENDENT_OPTION(BUILD_GO_CLIENT "Build Go client library" OFF "BUILD_CLIENTS" OFF)

message(STATUS "----------------------------------------------------------")
message(STATUS "${PROJECT_NAME} version:                        ${PROJECT_VERSION}")
message(STATUS "Build configuration Summary")
message(STATUS "  Build with unit tests:                  ${BUILD_TESTS}")
message(STATUS "    Use system catch library:             ${USE_SYSTEM_CATCH}")
message(STATUS "  Use system thrift library:              ${USE_SYSTEM_THRIFT}")
message(STATUS "  Use system libcuckoo library:           ${USE_SYSTEM_LIBCUCKOO}")
message(STATUS "  Use system AWS SDK:                     ${USE_SYSTEM_AWS_SDK}")
message(STATUS "  Use system Jemalloc:                    ${USE_SYSTEM_JEMALLOC}")
message(STATUS "  Generate thrift files:                  ${GENERATE_THRIFT}")
message(STATUS "  Build benchmarks:                       ${BUILD_BENCHMARKS}")
message(STATUS "  Build client libraries:                 ${BUILD_CLIENTS}")
message(STATUS "    Build C client library:               ${BUILD_C_CLIENT}")
message(STATUS "    Build Go client library:              ${BUILD_GO_CLIENT}")
message(STATUS "----------------------------------------------------------")
